<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="PrimaryColor">#07ffc5</Color>
    <Color x:Key="PrimaryContentColor">#000705</Color>
    <Color x:Key="PrimaryDarkColor">#00d3a2</Color>
    <Color x:Key="PrimaryLightColor">#3affd1</Color>

    <Color x:Key="SecondaryColor">#2007ff</Color>
    <Color x:Key="SecondaryContentColor">#ffffff</Color>
    <Color x:Key="SecondaryDarkColor">#1500d3</Color>
    <Color x:Key="SecondaryLightColor">#4e3aff</Color>

    <Color x:Key="BackgroundColor">#eff1f0</Color>
    <Color x:Key="ForegroundColor">#fbfbfb</Color>
    <Color x:Key="BorderColor">#dde2e0</Color>

    <Color x:Key="CopyColor">#232928</Color>
    <Color x:Key="CopyLightColor">#5e6e6a</Color>
    <Color x:Key="CopyLighterColor">#849591</Color>

    <Color x:Key="SuccessColor">#07ff07</Color>
    <Color x:Key="WarningColor">#ffff07</Color>
    <Color x:Key="ErrorColor">#ff0707</Color>
    <Color x:Key="SuccessContentColor">#000700</Color>
    <Color x:Key="WarningContentColor">#070700</Color>
    <Color x:Key="ErrorContentColor">#ffffff</Color>

    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}" />
    <SolidColorBrush x:Key="PrimaryContentBrush" Color="{StaticResource PrimaryContentColor}" />
    <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{StaticResource PrimaryDarkColor}" />
    <SolidColorBrush x:Key="PrimaryLightBrush" Color="{StaticResource PrimaryLightColor}" />

    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}" />
    <SolidColorBrush x:Key="SecondaryContentBrush" Color="{StaticResource SecondaryContentColor}" />
    <SolidColorBrush x:Key="SecondaryDarkBrush" Color="{StaticResource SecondaryDarkColor}" />
    <SolidColorBrush x:Key="SecondaryLightBrush" Color="{StaticResource SecondaryLightColor}" />

    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}" />
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}" />

    <SolidColorBrush x:Key="CopyBrush" Color="{StaticResource CopyColor}" />
    <SolidColorBrush x:Key="CopyLightBrush" Color="{StaticResource CopyLightColor}" />
    <SolidColorBrush x:Key="CopyLighterBrush" Color="{StaticResource CopyLighterColor}" />

    <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}" />
    <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}" />
    <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorColor}" />
    <SolidColorBrush x:Key="SuccessContentBrush" Color="{StaticResource SuccessContentColor}" />
    <SolidColorBrush x:Key="WarningContentBrush" Color="{StaticResource WarningContentColor}" />
    <SolidColorBrush x:Key="ErrorContentBrush" Color="{StaticResource ErrorContentColor}" />

    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryContentBrush}"/>
        <Setter Property="FontSize" Value="15"/>
        <!--<Setter Property="Padding" Value="10"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="12">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource SecondaryContentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryContentBrush}"/>
        <!--<Setter Property="Padding" Value="10"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" 
                                  VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryDarkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IncrementButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource SuccessContentBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                 BorderBrush="{TemplateBinding BorderBrush}" 
                 BorderThickness="{TemplateBinding BorderThickness}" 
                 CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" 
                               VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryLightBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource SecondaryContentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DecrementButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource ErrorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ErrorContentBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                 BorderBrush="{TemplateBinding BorderBrush}" 
                 BorderThickness="{TemplateBinding BorderThickness}" 
                 CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" 
                               VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryLightBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource SecondaryContentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
